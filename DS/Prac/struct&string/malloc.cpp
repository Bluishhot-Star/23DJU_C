#include <iostream>
// #include "malloc.h"
// 변수
// 지역(스택)
// 전역, 정적, 외부(데이터)

// 메모리 영역
// 스택
// 데이터
// ROM
// 힙 영역(동적할당) // 런타임 중에 대응이 가능하도록 하기 위해서

// 동적 할당
// 1. 런타임 중에 대응 가능
// 2. 사용자가 직접 메모리를 관리해야함(해제 해줘야함)

int main(){
    int* pInt = (int*)malloc(100); // 힙 영역에 100byte 공간 만들기&정수형으로 사용하겠다!
    // <<malloc의 반환타입이 void 포인터인 이유!>>
    // malloc자체는 단지 메모리 크기만 할당해주는 것이므로 어떤 자료형으로 void 포인터 형식으로 메모리 시작 주소를 반환한다.
    // 사용자는 해당 공간을 캐스팅을 통해서 ((("어떤 목적으로 사용할 지"))) 정해주면 됨!!
    free(pInt); // free 안에는 힙 메모리에 있는 녀석을 넣어주면 된다.

    // 가변 배열
    int a= 100;
    // 배열 개수를 선언할 때는 변수를 사용할 수 없다.
    // int arr[a] = {};  //개수가 정해지지 않은 배열을 지역에 할당할 수 없음

    //객체(Instance)
    // int
    // int a;  a가 바로 객체 // 붕어빵틀=자료형, 붕어빵=객체(인스턴스) / 클래스에서도 같음.

    




    return 0;
}